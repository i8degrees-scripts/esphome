# Sonoff S31 Smart WiFi Plug
#
# 1. https://devices.esphome.io/devices/Sonoff-S31
#
---

# Basic Config
esphome:
  # IMPORTANT(JEFF): Match the filename 1:1 without file extension, including the prefixed `.`
  # NOTE(JEFF): The name becomes the hostname that is given to this device. It will be advertised
  # via mDNS as {lower_devicename}.local and will also be assigned the assigned wifi domain 
  # value (.lan).
  name: "sonoff-s31-4"
  friendly_name: "Sonoff S31 Plug #4"

esp8266:
  board: esp12e
  early_pin_init: false

wifi:
  ssid: !secret wifi_ssid1
  password: !secret wifi_ssid1_password
  domain: ".lan"

  # Enable fallback hotspot in case of emergency
  ap:
    ssid: "${lower_devicename}_Hotspot"
    password: "UOR6GLP0CBdi"

captive_portal:

# Enable Home Assistant API for use with ESPHome integration
#
# WARNING(jeff): This configuration cannot be used with the MQTT component. You must
# choose either the API component OR the MQTT component. The total firmware file size
# exceeds the maximum storage space available.
#
# 1. https://esphome.io/components/api.html
#
# NOTE(JEFF): Remove the following line if you're not using Home Assistant or your switch 
# will restart every now and again!
#api:
  #encryption:
    #key: !secret api4_key

# OTA (Over The Air) updates without physical console
ota:
  - platform: esphome
    #password: !secret ota_password
    password: "89fc8e07fe002750b984e70d1cd90e63"
    
# Firmware logging output
#
# 1. https://esphome.io/components/logger.html
logger:
  level: DEBUG
  #level: VERBOSE
  # We must not use the serial interface for logging because our energy monitoring 
  # circuit -- CSE7766 -- uses this upon power up.
  baud_rate: 0 
  logs:
    # (Overide any global setting, to VERBOSE will spamming the cse7766 sensors)
    sensor: INFO
    mqtt.component: INFO
    #mqtt.component: VERBOSE
    mqtt.client: INFO
    #mqtt.client: VERBOSE

# (UART logging interferes with cse7766)
uart:
  rx_pin: RX
  baud_rate: 4800
  parity: EVEN

# Activate "/metrics" endpoint for extended logging
prometheus:

# MQTT client upstream connection to ha1.home
# 
# 1. https://esphome.io/components/mqtt#
# 2. https://esphome.io/components/mqtt#mqtt-publish-json-action
mqtt:
  id: "mqtt_client"
  discovery: true
  broker: !secret mqtt0_broker
  username: !secret mqtt0_username
  password: !secret mqtt0_password

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "Button"
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "Status"

sensor:
  - platform: wifi_signal
    name: "WiFi Signal" 
    update_interval: 60s
  - platform: cse7766
    current:
      name: "Current"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s
    voltage:
      name: "Voltage"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s
    power:
      name: "Power"
      accuracy_decimals: 2
      id: my_power
      filters:
        - throttle_average: 60s
    energy:
      name: "Energy"
      accuracy_decimals: 2
      filters:
        - throttle: 60s
    apparent_power: #(only available with version 2024.3.0 or greater)
      name: "Apparent Power"
      filters:
        - throttle_average: 60s
    power_factor: #(only available with version 2024.3.0 or greater)
      name: "Power Factor"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s

  - platform: total_daily_energy #(Optional, not specific to cse7766)
    name: "Daily Energy"
    power_id: my_power
    accuracy_decimals: 2

switch:
  - platform: gpio
    name: "Relay"
    pin: GPIO12
    id: relay
    restore_mode: ALWAYS_OFF # Powering the relay may cause damage or instability when the programmer is supplying Vcc.

time:
  - platform: sntp
    id: sntp_time
    timezone: !secret time_tz
    servers:
      # 192.168.12.138
      - "pve3.home"
      # 157.230.183.221
      - "time.mynaughty.party"
      # 162.159.200.1, 162.159.200.123
      - "time.cloudflare.com"
      # 174.138.108.209
      #- "time.479831.xyz"
    on_time_sync:
      then:
        - logger.log: "The system clock has been synchronized."
    on_time:
      - seconds: 0
        minutes: /60
        then:
          - logger.log: "One hour has elapsed."
          #- switch.turn_off:  relay

status_led:
  pin:
    number: GPIO13
    inverted: True
