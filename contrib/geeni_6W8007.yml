# https://devices.esphome.io/devices/Geeni-6W8007-Smart-Wi-Fi-Outlet
---
substitutions:
  device_description: Geeni 6W8007 Smart Wi-Fi Outlet
  device_name: geeni-wifi-outlet-${device_location}
  device_friendly_name: Geeni Smart Wifi Outlet ${device_friendly_location}
  device_make: Geeni
  device_model: 6W8007
  device_chipset: Beken BK7231N
  device_friendly_location: ADD LOCATION
  device_location: ADD-LOCATION
  
esphome:
  name: $device_name
  friendly_name: $device_friendly_name
  
bk72xx:
  board: cb2s
  
logger:
  baud_rate: 0
  
web_server:
  port: 80
  
captive_portal:

mdns:

# Add your own api encryption key if you use it or use a secrets file one, your choice
api:
  encryption:
    key: !secret api_key

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: $device_name
    password: !secret wifi_ap_password

text_sensor:
  - platform: libretiny
    version:
      name: LibreTiny Version

sensor:
  - platform: uptime
    name: ${device_friendly_name} Uptime
    unit_of_measurement: minutes
    filters:
      - lambda: return x / 60.0;

  - platform: wifi_signal
    name: ${device_friendly_name} Signal
    update_interval: 60s

light:
  - platform: status_led
    name: "led"
    internal: true
    id: led
    pin:
      number: P26
      inverted: true

switch:
  - platform: gpio
    id: switch_1
    name: Relay 1
    pin: P6
  - platform: gpio
    id: switch_2
    name: Relay 2
    pin: P7

binary_sensor:
  - platform: gpio
    id: binary_switch_all
    pin:
      number: P24
      inverted: true
      mode: INPUT_PULLUP
    on_multi_click:
    - timing:
        - ON for at most 1s
        - OFF for at least 0.5s
      then:
        - switch.toggle: switch_1
    - timing:
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at least 0.2s
      then:
        - switch.toggle: switch_2