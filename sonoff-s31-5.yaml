# Sonoff S31 Smart WiFi Plug
#
# 1. https://devices.esphome.io/devices/Sonoff-S31
#
# [1]: IMPORTANT(JEFF): Avoid the potential scenario where lack 
# of comms with this component invokes an automatic restart of 
# the device node. This is by design and is intended to act as
# an aid in automatic comms "healing".
#
# This particular smart plug serves a mission critical purpose
# and is presently immune to the above "patching" only because
# of the relay switch's restore_mode attribute being always on.
# If this were to change inadvertedly, this patch is the only
# other failsafe to not bringing our home Internet connection 
# down every 15 minutes or so...
---

packages:
  time: !include configs/time.yml
  wifi: !include configs/wifi.yml
  mqtt: !include configs/mqtt.yml
  #uart: !include configs/uart.yml
  #ota: !include configs/ota.yml
  webserver: !include configs/webserver.yml
  logger_sonoff: !include configs/sonoff-s31/logger.yml
  logger: !include configs/production.yml
  prometheus: !include configs/prometheus.yml

# Basic Config
esphome:
  # IMPORTANT(JEFF): Match the filename 1:1 without file extension, including the prefixed `.`
  # NOTE(JEFF): The name becomes the hostname that is given to this device. It will be advertised
  # via mDNS as {lower_devicename}.local and will also be assigned the assigned wifi domain 
  # value (.lan).
  name: "sonoff-s31-5"
  friendly_name: "carpnet-relay-1"
  #area: Kids Bedroom

esp8266:
  board: esp12e
  # IMPORTANT(JEFF): This is strongly recommended [1] to
  # be (re)-set from the default of TRUE to FALSE for
  # the switch component type. 
  # 1. https://esphome.io/components/esp8266.html#configuration-variables
  early_pin_init: false
  # NOTE(JEFF): This lets us quickly restore the state
  # of the relay without the need of LAN support.
  restore_from_flash: true
    
# NOTE(JEFF): Ensure that we do not needlessly use up our
# flash write cycles; this tells ESPHome to wait a full minute
# in between state changes before writing to memory.
preferences:
  flash_write_interval: 1min

# OTA (Over The Air) updates without physical console
ota:
  - platform: esphome
    #password: !secret ota_password
    #password: "89fc8e07fe002750b984e70d1cd90e63"
    password: "a2d142f00ae9c74a444aa61cbd8d74d9"
    # NOTE(JEFF): This ought to prevent the device from
    # being auto-reset upon firmware update.
    #
    # 1. 
    #safe_mode: false

api:
  # See [IMPORTANT][1] note
  reboot_timeout: 0s
  encryption:
    key: !secret api5_key

packages:
  #ota: !include configs/ota.yml
  #sonoff_relay_switch: !include configs/sonoff-s31/relay_switch.yml
  esp8266_platform: !include configs/esp8266/esp12/platform.yml
  esp8266_storage: !include configs/esp8266/flash_storage.yml
  logger_sonoff: !include configs/sonoff-s31/logger.yml
  mdns_host: !include configs/mdns.yml
  mqtt_client: !include configs/mqtt.yml
  ntp_time: !include configs/time.yml
  prometheus: !include configs/prometheus.yml
  sensor_wifi_diag: !include configs/sensor/wifi_diag.yml
  sensor_wifi_signal: !include configs/sensor/wifi_signal.yml
  sonoff_gpios: !include configs/sonoff-s31/gpios.yml
  sonoff_project: !include configs/sonoff-s31/project.yml
  sonoff_uart: !include configs/sonoff-s31/uart.yml
  switch_factory_reset: !include configs/switch/factory_reset.yml
  switch_restart: !include configs/switch/restart.yml
  webserver: !include configs/webserver.yml
  wifi: !include configs/wifi.yml

<<: !include configs/development.yml
#<<: !include configs/production.yml

wifi:
  output_power: 15.00
  # See [IMPORTANT][1] note
  reboot_timeout: 0s

mqtt:
  # See [IMPORTANT][1] note
  reboot_timeout: 0s

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "Button"
    on_press:
      - switch.toggle: relay
  - platform: status
    name: "Status"

sensor:
  - platform: wifi_signal
    name: "WiFi Signal" 
    update_interval: 60s
  - platform: cse7766
    current:
      name: "Current"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s
    voltage:
      name: "Voltage"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s
    power:
      name: "Power"
      accuracy_decimals: 2
      id: my_power
      filters:
        - throttle_average: 60s
    energy:
      name: "Energy"
      accuracy_decimals: 2
      filters:
        - throttle: 60s
    apparent_power: #(only available with version 2024.3.0 or greater)
      name: "Apparent Power"
      filters:
        - throttle_average: 60s
    power_factor: #(only available with version 2024.3.0 or greater)
      name: "Power Factor"
      accuracy_decimals: 2
      filters:
        - throttle_average: 60s

  - platform: total_daily_energy #(Optional, not specific to cse7766)
    name: "Daily Energy"
    power_id: my_power
    accuracy_decimals: 2

switch:
  - platform: gpio
    name: "Relay"
    pin: GPIO12
    id: relay 
    restore_mode: RESTORE_DEFAULT_ON
    #restore_mode: ALWAYS_OFF # Powering the relay may cause damage or instability when the programmer is supplying Vcc.

status_led:
  pin:
    number: GPIO13
    inverted: True
