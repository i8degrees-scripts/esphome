# yms-relay-1.yaml:jeff
#
# Native Home Assistant integration with ESPHome firmware
#
# 1. This revision replaces the web server component with the `API`
# component; we haven't enough ROM space to integrate both components.
# SEE ALSO
# 1. esphome/psu1-relay-0.yaml.bck
---

substitutions:
  devicename: "yms-relay-1"
  lower_devicename: "yms-relay-1"

# Enable usage with Home Assistant APIs
#
# NOTE(JEFF): This has the side effect of restarting this 
# device once every ~30 minutes if it is unable to contact
# the HA server; this is by design.
api:
  encryption:
    key: "vkS7vdkGeKtCJgsq8ADuvGIEKCzyYBx+WqBqEChis+8="

packages:
  esp01_platform: !include configs/esp8266/esp01/platform.yml
  esp8266_project: !include configs/esp8266/project.yml
  esp8266_storage: !include configs/esp8266/flash_storage.yml
  mdns_host: !include configs/mdns.yml
  mqtt_client: !include configs/mqtt.yml
  ntp_time: !include configs/time.yml
  ota: !include configs/ota.yml
  prometheus: !include configs/prometheus.yml
  sensor_wifi_diag: !include configs/sensor/wifi_diag.yml
  sensor_wifi_signal: !include configs/sensor/wifi_signal.yml
  switch_factory_reset: !include configs/switch/factory_reset.yml
  switch_restart: !include configs/switch/restart.yml
  web_server: !include configs/webserver.yml
  wifi: !include configs/wifi.yml
  sensor_uptime: !include configs/sensor/uptime.yml

#<<: !include configs/development.yml
<<: !include configs/production.yml

# IMPORTANT(JEFF): We do not have the space to support
# version 3 of the webserver!
web_server:
  version: 2

esphome:
  name: ${devicename}
  friendly_name: "(Repair Bench) Light #1"
  area: "Bedroom"

# the on off button
# IMPORTANT(jeff): The name of this sensor will appear on
# Home Assitant visually as an icon with ON/OFF toggle.
# The name tag below shall be reflected there.
binary_sensor:
  - platform: gpio
    id: gpio1
    pin: GPIO1
    filters:
      - invert:
      - delayed_on: 100ms
      - delayed_off: 100ms
      - delayed_on_off: 100ms
    on_press:
      - switch.toggle: relay_switch
      - logger.log: "DEBUG: relay trigger"
      #- mqtt.publish_json:
        #topic: "test"
        #payload: |-
          #root["state"]= "ping"

# the relay that controls the output power
# 
# 1. https://esphome.io/components/switch/index.html
# 2. https://esphome.io/web-api/#switch
#
# EXAMPLES
#
# 1. curl -Lv --digest -u admin:19841985 -X POST "http://yms-relay-1.ha.home/switch/relay/turn_off"
#

switch:
  - platform: gpio
    pin: GPIO14
    name: relay_switch
    id: relay_switch
    restore_mode: RESTORE_DEFAULT_OFF
    icon: !secret switch_icon
    device_class: !secret switch_device_class
  - platform: gpio
    pin: GPIO13
    id: status_led
    name: status_led
    restore_mode: RESTORE_DEFAULT_ON
    # FIXME(JEFF): Refactor code; all of the new code needs to
    # be relocated to mqtt section. See "MQTT Client Component" 
    on_turn_on:
      - switch.turn_on: status_led
      - logger.log: "DEBUG: status_led is ON"
    on_turn_off:
      - switch.turn_off: status_led
      - logger.log: "DEBUG: status_led is OFF"
